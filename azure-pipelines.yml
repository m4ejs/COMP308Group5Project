trigger:
  - main

pool:
  name: Default

variables:
  buildConfiguration: 'Release'

# ============================
# Build Stage
# ============================
stages:
  - stage: Build
    displayName: 'Build Stage'
    jobs:
      - job: BuildJob
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '20.x'
            displayName: 'Install Node.js'

          # Build Client (React)
          - script: |
              cd $(Build.SourcesDirectory)/client
              npm install
              npm run build
            displayName: 'Build Client'

          # Build Server (Node.js API)
          - script: |
              cd $(Build.SourcesDirectory)/server
              npm install --legacy-peer-deps
            displayName: 'Install Server Dependencies'
          
# ============================
# SonarQube Code Analysis Results
# ============================
  - stage: SonarQubeAnalysis
    displayName: 'SonarQube Code Analysis'
    jobs:
      - job: SonarJob
        steps:
          - task: SonarQubePrepare@5
            inputs:
              SonarQube: 'Project_SonarCube'
              scannerMode: 'CLI'
              configMode: 'manual'
              cliProjectKey: 'm4ejs_COMP308Group5Project'
              cliProjectName: 'COMP308Group5Project'

          - task: SonarQubeAnalyze@5

          - task: SonarQubePublish@5
            inputs:
              pollingTimeoutSec: '300'

# ============================
# Unit Test Results & Code Coverage %
# ============================
  - stage: Test
    displayName: 'Run Tests & Generate Coverage'
    jobs:
      - job: TestJob
        continueOnError: true # Even if tests fail, pipeline continues
        steps:
          - script: |
              cd $(Build.SourcesDirectory)/server
              npx jest --coverage
            displayName: 'Run Tests & Coverage'

# ============================
# Artifact Published (Downloadable)
# ============================
  - stage: Artifact
    displayName: 'Publish Artifact'
    jobs:
      - job: ArtifactJob
        steps:
          - script: |
              mkdir $(Build.ArtifactStagingDirectory)\app
              echo Copying client build...
              xcopy /E /I /Y $(Build.SourcesDirectory)\client\dist $(Build.ArtifactStagingDirectory)\app\client
              echo Copying server code...
              xcopy /E /I /Y $(Build.SourcesDirectory)\server $(Build.ArtifactStagingDirectory)\app\server
            displayName: 'Prepare Artifact'

          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)\app'
              ArtifactName: 'drop'

# ============================
# Deliver Stage
# ============================
# Includes Deployments to Dev, QAT, Staging, and Production environments

# ============================
# Deploy to Dev Environment
# ============================
  - stage: DeployDev
    displayName: 'Deploy to Dev Environment'
    jobs:
      - job: DeployJob
        steps:
          - script: |
              echo "Deploying to Dev Environment"
              echo "App running at http://localhost:5000"
            displayName: 'Deployment Simulation'

# ============================
# Deploy to QAT Environment
# ============================
  - stage: DeployQAT
    displayName: 'Deploy to QAT Environment'
    jobs:
      - job: DeployQATJob
        steps:
          - script: |
              echo Deploying to QAT Environment...
              echo App running at http://qat.local:5000
            displayName: 'QAT Deployment'

# ============================
# Deploy to Staging Environment
# ============================
  - stage: DeployStaging
    displayName: 'Deploy to Staging Environment'
    jobs:
      - job: DeployStagingJob
        steps:
          - script: |
              echo Deploying to Staging Environment...
              echo App running at http://staging.local:5000
            displayName: 'Staging Deployment'

# ============================
# Deploy to Production Environment
# ============================
  - stage: DeployProd
    displayName: 'Deploy to Production Environment'
    jobs:
      - job: DeployProdJob
        steps:
          - script: |
              echo Deploying to Production Environment...
              echo App running at https://mktestdomain.com
            displayName: 'Production Deployment'
